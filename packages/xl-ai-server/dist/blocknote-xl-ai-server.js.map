{"version":3,"file":"blocknote-xl-ai-server.js","sources":["../../../node_modules/hono/dist/middleware/cors/index.js","../src/index.ts"],"sourcesContent":["// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      if (opts.allowMethods?.length) {\n        set(\"Access-Control-Allow-Methods\", opts.allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: c.res.statusText\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n","import { serve } from \"@hono/node-server\";\nimport { Hono } from \"hono\";\nimport { cors } from \"hono/cors\";\nimport { existsSync, readFileSync } from \"node:fs\";\nimport { createSecureServer } from \"node:http2\";\nimport { Agent, setGlobalDispatcher } from \"undici\";\n\n// make sure our fetch request uses HTTP/2\nsetGlobalDispatcher(\n  new Agent({\n    allowH2: true,\n  })\n);\n\nconst ignoreHeadersRe = /^content-(?:encoding|length|range)$/i;\n\nexport const proxyFetch: typeof fetch = async (request, options) => {\n  const req = new Request(request, options);\n  req.headers.delete(\"accept-encoding\"); // TBD: there may be cases where you want to explicitly specify\n  const res = await fetch(req);\n\n  const headers: HeadersInit = [...res.headers.entries()].filter(\n    ([k]) => !ignoreHeadersRe.test(k) && k !== \"strict-transport-security\"\n  );\n  return new Response(res.body, {\n    ...res,\n    status: res.status,\n    statusText: res.statusText,\n    headers,\n  });\n};\n\nfunction getProviderInfo(provider: string) {\n  if (provider === \"openai\") {\n    return {\n      key: process.env.OPENAI_API_KEY,\n    };\n  }\n  if (provider === \"groq\") {\n    return {\n      key: process.env.GROQ_API_KEY,\n    };\n  }\n  if (provider === \"albert-etalab\") {\n    return {\n      key: process.env.ALBERT_ETALAB_API_KEY,\n    };\n  }\n  return \"not-found\";\n}\n\nconst app = new Hono();\n\napp.use(\"/health\", async (c) => {\n  return c.json({ status: \"ok\" });\n});\n\napp.use(\"/ai\", cors(), async (c) => {\n  const url = c.req.query(\"url\");\n  if (!url) {\n    return c.json({ error: \"url parameter is required\" }, 400);\n  }\n\n  const provider = c.req.query(\"provider\");\n  if (!provider) {\n    return c.json({ error: \"provider parameter is required\" }, 400);\n  }\n\n  const providerInfo = getProviderInfo(provider);\n\n  if (providerInfo === \"not-found\" || !providerInfo.key?.length) {\n    return c.json(\n      {\n        error: `provider / key not found for provider ${provider}. Make sure to load correct env variables.`,\n      },\n      404\n    );\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(\"Proxying request to\", url);\n  const request = new Request(url, c.req.raw);\n  request.headers.set(\"Authorization\", `Bearer ${providerInfo.key}`);\n  return proxyFetch(request);\n});\n\nconst http2 = existsSync(\"localhost.pem\");\nserve(\n  {\n    fetch: app.fetch,\n    createServer: http2 ? createSecureServer : undefined,\n\n    serverOptions: {\n      key: http2 ? readFileSync(\"localhost-key.pem\") : undefined,\n      cert: http2 ? readFileSync(\"localhost.pem\") : undefined,\n    },\n    port: Number(process.env.PORT) || 3000,\n  },\n  (info) => {\n    // eslint-disable-next-line no-console\n    console.log(\n      `Server is running on ${info.address}${info.port}, http2: ${http2}`\n    );\n  }\n);\n"],"names":["cors","options","opts","findAllowOrigin","optsOrigin","origin","c","next","set","key","value","allowOrigin","existingVary","_a","_b","headers","requestHeaders","setGlobalDispatcher","Agent","ignoreHeadersRe","proxyFetch","request","req","res","k","getProviderInfo","provider","app","Hono","url","providerInfo","http2","existsSync","serve","createSecureServer","readFileSync","info"],"mappings":"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","x_google_ignoreList":[0]}